1) composer create-project laravel/laravel 'your project name'  ---- command to create laravel project.

2) npm install --- to install all dependency and laravel mix

3) composer require laravel/ui  --dev  ------ this installs all ui commands

4) php artisan ui vue --auth    ----- this installs all auth related views and controller files with vuejs support

5) php artisan migrate    ---- this will migrate all the DB table to mysql database
before this goto config/database change to utf8

6) php artisan migrate:fresh    ---- rollback and migrate DB

7) php artisan serve    ------- to run the project

8) git init

9) git add .

10) git commit -m''

11) $ git remote add origin https://github.com/sujayverma/laravel-qa.git

12) $ git branch -M master

13) $ git push -u origin master

14) git branch 

15) git checkout -b database

16) php artisan make:model Question -m   --------- creates model along with migrattion
now make changes to the new migratgration file add new columns and relations

17) run php artisan migrate    ------ to create questions table in the DB.

18) Create relationship between user and question model. 

19) Git commit and push code git push origin database

20) Git checkout to master

21) Git merge database branch

22) Create a question model factory  ----- purpose is to fill DB table with fake data.

23) Open terminal and php artisan tinker
User::factory()->count(3)->create() ------ this will create 3 fake users in the DB.

24) Open seeder file and add code for generating fake data.
User::factory(3)->create()->each(function($u){
    $u->questions()
    ->saveMany(
        Question::factory(rand(1,5))->make()
    );
});

----------- this will create fake users and questions.
now in terminal run php artisan migrate:fresh --seed     -------- this will drop and then create tables in Db with fake data.

25) Create a new branch for this lesson 
git checkout -b leasson-4

26) Open web routes and add resource route for questions controller.

27) in cmd php artisan make:controller QuestionsController --resource --model=Question
create views for questions and show the question and pagination
for laravel 8 install bootstrap UI using  ---php artisan ui bootstrap ---npm install && npm run dev
also use php artisan vendor:publish --tag=laravel-pagination  ------ this help in getting pagination styling

now git push code to branch
28) Create a branch lesson-5 use git checkout -b lesson-5

29) Add link to title and show author of the question and created at timings value in view blade page.
Now set this accesor value in Model using getAttribute method.

30) Now how do we check what are the sql queries running to get all this questions? 
to check we need to install a package and this package will be used only in development
option 1 ---composer require barryvdh/laravel-debugbar --dev   ------the package to check sql queries that are running.
option 2 --- use of DB facades as used in the question controller.
Now when we check the querylog we find N+1 query is running using eloquent. To solve this issue we need to use WITH in
eloquent as used in question controller.

31) Time add votes, answer and view counter. Let create a branch git checkout -b lesson-6
Open resource sass folder create css variable also add css to app.sass file. compile the sass into css by using Command
npm run dev or npm run watch
Add votes, answers and views value in view page. Create a accessor in model file to update the css class as per value.
Done.
Git add. git commit -m '' git push origin lesson-6 git checkout master git merge lesson-6 git push origin master

32) For lesson 7 lets create a branch lesson-7 git checkout -b lesson-7
In this lesson we learnt how to create a form and add error message divs also added @csrf token in form.
then git push and merge process.

33) For lesson 8 we added validation to form. Corrected issue with fillable in question model. And saved value to DB
from the form. Added a _message.blade for layout to show success message in question index templete. Learnt how to add
or create new Request for form validation. ----- php artisan make:Request AskQuestionRequest
then git push and merge process.

34) Create new branch git checkout -b lesson-9
in this lesson we learn how to update a form data. For this we create a different templete for form. Included this form
in create and edit templete. Passed a hidden PUT method in form using method_field() then in controller update method
updated the DB. lesson done next git push and merge. 

35) Create a branch lesson-10
Use the destroy route to delte the question. by crating a form use submit button in the form.
Git add push and merge.

36) Create a branch
In this lesson we learnt how to remove a route from resource route list and how to add a custom route for show with slugs.
Had to update RouteServiceProvider boot fucntion had to bind a method for question slugs.
Installed parsedown to show html in proper way. https://github.com/parsedown/laravel
git add commit push

35) Use Gate for authorization permission of question edit and delete.
Add & define gate in AuthServiceProvider use Support Fascade gate classes on both service provider and controller.
Use allow or denies function for the task. Use CAN in view to hide edit and delete for unauthorized users.
Git commit and push branch lesson-12-a

36) Use of Policy for authorization permission for question edit and delete. 
php artisan make:policy QuestionPolicy --model=Question  ----- this will create a policy for Question model.
add the user check in policy functions add the model and policy in AuthServiceProvider class.
Use it in controller fucntions for authorization. Use auth middleware to protect create question route.
Use CAN in view to hide edit and delete for unauthorized users.
Git commit push branch lesson-12-b and merge with master.
